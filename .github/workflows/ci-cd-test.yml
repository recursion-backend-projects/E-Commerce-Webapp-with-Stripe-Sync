name: CI TEST
run-name: ${{ github.actor }} is CI testing
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn --cwd src install

      - name: Lint Frontend file
        run: ./src/node_modules/.bin/eslint ./src/app --max-warnings=0

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.0'
          bundler-cache: true

      - name: Lint Ruby files
        run: cd src && bundle install && bundle exec rubocop

  # test:
  #   runs-on: ubuntu-22.04
  #   services:
  #     mysql:
  #       image: mysql:8.0.36
  #       ports:
  #         - "3306:3306"
  #       options: --health-cmd "mysqladmin ping -h 127.0.0.1" --health-interval 20s --health-timeout 10s --health-retries 10
  #       env:
  #         MYSQL_ROOT_PASSWORD: password

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Ruby 3.3.0
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: "3.3.0"
  #         bundler-cache: true

  #     - name: Bundle install
  #       run: |
  #         cd src
  #         gem install bundler
  #         bundle install --jobs 4 --retry 3

  #     - name: Set up database
  #       run: |
  #         cd src
  #         cp config/database.yml.ci config/database.yml
  #         bundle exec rails db:prepare
  #       env:
  #         RAILS_ENV: test

  #     - name: Run rspec
  #       run: |
  #         cd src
  #         bundle exec rspec
  #       env:
  #         RAILS_ENV: test

#   deploy-to-production:
#     needs: build-and-test
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main' && github.event_name == 'push'

#     steps:
#       - name: Check
#         uses: actions/checkout@v4

#       - name: Deploy
#         run: |
#           echo "${{ secrets.PRIVATE_KEY }}" > private_key
#           chmod 600 private_key
#           ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=2 ${{ secrets.USER_NAME }}@${{ secrets.HOST_NAME }} -i private_key "\
#           cd /home/ubuntu/web/E-Commerce-Webapp-with-Stripe-Sync && \
#           git fetch git@github.com:seiichikick0404/E-Commerce-Webapp-with-Stripe-Sync.git && \
#           git pull git@github.com:seiichikick0404/E-Commerce-Webapp-with-Stripe-Sync.git && \
#           docker compose -f compose.prod.yml down && \
#           docker compose -f compose.prod.yml build && \
#           docker compose -f compose.prod.yml up -d && \
#           docker compose -f compose.prod.yml run app rails db:create && \
#           docker compose -f compose.prod.yml run app rails db:migrate"
