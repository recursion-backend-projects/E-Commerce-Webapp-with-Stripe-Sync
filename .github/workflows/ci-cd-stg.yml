name: Publish Docker image and CD Staging
run-name: ${{ github.actor }} is building a staging environment
on:
    push:
        # 検証用コード
        branches: [feature/#8_cicd]
#     branches: [main]
#   pull_request:
#     branches: [main]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      # リポジトリからコードをチェックアウト
      - name: Check out the repo
        uses: actions/checkout@v4

      # Buildxのセットアップ
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      # Docker Hubへログイン
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # イメージのタグとラベルを生成
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: artsa2/art-sa2-shop

      # キャッシュ設定
      - name: Cache App
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-app # キャッシュを保存するディレクトリ指定
          key: ${{ github.ref }}-${{ github.sha }} # キャッシュを特定するキーの指定
          #  key の値でキャッシュがヒットしなかった場合は、以前のビルド結果を参照する
          restore-keys: |
            ${{ github.ref }}
            refs/head/main

      - name: Cache Web
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-web
          key: ${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ github.ref }}
            refs/head/main

      # Buildxでイメージをビルド
      - name: Build images - App
        uses: docker/build-push-action@v5
        with:
          push: false
          builder: ${{ steps.buildx.outputs.name }} # Buildxでビルドすることを指定
          tags: app:latest # イメージ名を指定(compose.prod.ymlのimageで定義している名前)
          load: true
          context: ./src # srcディレクトリをビルドコンテキストに設定
          file: ./infra/prod/app/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache-app # キャッシュを指定
          cache-to: type=local,dest=/tmp/.buildx-cache-new-app # 新しいキャッシュ名に変更

      - name: Build images - Web
        uses: docker/build-push-action@v5
        with:
          push: false
          builder: ${{ steps.buildx.outputs.name }}
          tags: web:latest
          load: true
          context: .
          file: ./infra/prod/web/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache-web
          cache-to: type=local,dest=/tmp/.buildx-cache-new-web

      # Dockerイメージをビルドする
      - name: Docker compose build
        run: |
          cd src
          docker compose -f compose.prod.yml build
  
      # Docker Hubにイメージをpushする
      - name: Push to docker hub
        id: push
        run: docker push artsa2/art-sa2-shop:latest

      # ビルドプロセスの認証情報生成
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
           subject-name: docker.io/artsa2/art-sa2-shop # 認証情報を生成する対象の名前
           subject-digest: ${{ steps.push.outputs.digest }} # 前のステップで生成されたイメージのダイジェストを使用する
           push-to-registry: true

      # キャッシュの肥大化対策
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Update cache
        run: |
          rm -rf /tmp/.buildx-cache-app
          rm -rf /tmp/.buildx-cache-web
          mv /tmp/.buildx-cache-new-app /tmp/.buildx-cache-app
          mv /tmp/.buildx-cache-new-web /tmp/.buildx-cache-web

      # Docker イメージのビルドおよびプッシュが成功した場合、メッセージをログに出力する
      - name: Post build actions
        if: success()
        run: echo "Docker images built, pushed, and attestation generated successfully!"
