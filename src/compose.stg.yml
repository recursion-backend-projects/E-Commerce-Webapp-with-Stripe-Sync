services:
  db:
    build:
      context: ../infra/stg/db
    environment:
      TZ: Asia/Tokyo
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./src/db/mysql_data:/var/lib/mysql

  app:
    build:
      context: .
      dockerfile: ../infra/stg/app/Dockerfile
      args:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - SECRET_KEY_BASE=${SECRET_KEY_BASE}
    depends_on:
      - db
    environment:
      RAILS_ENV: staging
      # SECRET_KEY_BASE: ${SECRET_KEY_BASE}
    ports:
      - "3000:3000"
    volumes:
      - ./:/E-Commerce-Webapp-with-Stripe-Sync
    user: root
    env_file:
      - .env

  web:
    build:
      context: ../infra/stg/web
    ports:
      - "8080:80" # 実際の環境では80番ポートを指定

    depends_on:
      - app
    volumes:
      - ../infra/stg/web/default.conf:/etc/nginx/conf.d/default.conf
      - ./public:/E-Commerce-Webapp-with-Stripe-Sync/public

  # https-portal:
  #   image: steveltn/https-portal:1
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   environment:
  #     DOMAINS: "E-Commerce-Webapp-with-Stripe-Sync.seiprojects.com -> http://web:80"
  #     STAGE: "staging"
  #   volumes:
  #     - https-portal-data:/var/lib/https-portal

volumes:
  db-data:
  https-portal-data: # HTTPS-PORTALをアップグレードする際に再署名を避けるために推奨されます
